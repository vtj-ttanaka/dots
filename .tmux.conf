set -g prefix `
unbind C-b; bind ` send-prefix


bind \" split-window -c "#{pane_current_path}"
bind % split-window -hc "#{pane_current_path}"
bind c new-window -c "#{pane_current_path}"


bind -r Up if -F '#{pane_at_top}' '' 'selectp -U'
bind -r Down if -F '#{pane_at_bottom}' '' 'selectp -D'
bind -r Left if -F '#{pane_at_left}' '' 'selectp -L'
bind -r Right if -F '#{pane_at_right}' '' 'selectp -R'


bind -r S-Up resizep -U
bind -r S-Down resizep -D
bind -r S-Left resizep -L
bind -r S-Right resizep -R


bind 0 run 'tmux select-window -t :0 || tmux new-window -t :0'
bind 1 run 'tmux select-window -t :1 || tmux new-window -t :1'
bind 2 run 'tmux select-window -t :2 || tmux new-window -t :2'
bind 3 run 'tmux select-window -t :3 || tmux new-window -t :3'
bind 4 run 'tmux select-window -t :4 || tmux new-window -t :4'
bind 5 run 'tmux select-window -t :5 || tmux new-window -t :5'
bind 6 run 'tmux select-window -t :6 || tmux new-window -t :6'
bind 7 run 'tmux select-window -t :7 || tmux new-window -t :7'
bind 8 run 'tmux select-window -t :8 || tmux new-window -t :8'
bind 9 run 'tmux select-window -t :9 || tmux new-window -t :9'


bind C {
  splitw -f -l30% ''
  set-hook -p pane-mode-changed 'if -F "#{!=:#{pane_mode},copy-mode}" "kill-pane"'
  copy-mode -s '{last}'
}


bind -n M-/ copy-mode \; send-key ?


set -g mode-keys vi


if-shell "command -v xsel &>/dev/null" {
  bind-key -T copy-mode-vi C-j send-keys -X copy-pipe-and-cancel "xsel -bi"
  bind-key -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel "xsel -bi"
}

if-shell "command -v xclip &>/dev/null" {
  bind-key -T copy-mode-vi C-j send-keys -X copy-pipe-and-cancel "xclip -i -sel clip"
  bind-key -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel "xclip -i -sel clip"
}

if-shell "command -v pbcopy &>/dev/null" {
  bind-key -T copy-mode-vi C-j send-keys -X copy-pipe-and-cancel "pbcopy"
  bind-key -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel "pbcopy"
}


set -g default-terminal "xterm-256color"


if -F "#{==:#{session_windows},1}" "set -g status off" "set -g status on"
set-hook -g window-linked   'if -F "#{==:#{session_windows},1}" "set -g status off" "set -g status on"'
set-hook -g window-unlinked 'if -F "#{==:#{session_windows},1}" "set -g status off" "set -g status on"'


set -g mouse on


set -g base-index 0
set -g status-position bottom
#set -g status-bg "#000000"
set -g status-fg "#2c3e50"
set -g status-left ""
set -g status-right ""
set -g window-status-current-format "#[fg="#ab1b19",underscore]#I:#W#[default]"
set -g window-status-format "#I:#W"
